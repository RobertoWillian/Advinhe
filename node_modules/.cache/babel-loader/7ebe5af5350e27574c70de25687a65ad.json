{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rwcos\\\\wordle\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { InformationCircleIcon } from \"@heroicons/react/outline\";\nimport { useState, useEffect } from \"react\";\nimport { Alert } from \"./components/alerts/Alert\";\nimport { Grid } from \"./components/grid/Grid\";\nimport { Keyboard } from \"./components/keyboard/Keyboard\";\nimport { InfoModal } from \"./components/modals/InfoModal\";\nimport { WinModal } from \"./components/modals/WinModal\";\nimport { isWordInWordList, isWinningWord, solution } from \"./lib/words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState(\"\");\n  const [isGameWon, setIsGameWon] = useState(false);\n  const [isWinModalOpen, setIsWinModalOpen] = useState(false);\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false);\n  const [isWordNotFoundAlertOpen, setIsWordNotFoundAlertOpen] = useState(false);\n  const [isGameLost, setIsGameLost] = useState(false);\n  useEffect(() => {\n    if (isGameWon) {\n      setIsWinModalOpen(true);\n    }\n  }, [isGameWon]);\n\n  const onChar = value => {\n    if (currentGuess.length < 5 && guesses.length < 6) {\n      setCurrentGuess(`${currentGuess}${value}`);\n    }\n  };\n\n  const onDelete = () => {\n    setCurrentGuess(currentGuess.slice(0, -1));\n  };\n\n  const onEnter = () => {\n    if (!isWordInWordList(currentGuess)) {\n      setIsWordNotFoundAlertOpen(true);\n      return setTimeout(() => {\n        setIsWordNotFoundAlertOpen(false);\n      }, 2000);\n    }\n\n    const winningWord = isWinningWord(currentGuess);\n\n    if (currentGuess.length === 5 && guesses.length < 6 && !isGameWon) {\n      setGuesses([...guesses, currentGuess]);\n      setCurrentGuess(\"\");\n\n      if (winningWord) {\n        return setIsGameWon(true);\n      }\n\n      if (guesses.length === 5) {\n        setIsGameLost(true);\n        return setTimeout(() => {\n          setIsGameLost(false);\n        }, 2000);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Word not found\",\n      isOpen: isWordNotFoundAlertOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      message: `You lost, the word was ${solution}`,\n      isOpen: isGameLost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-80 mx-auto items-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl grow font-bold\",\n        children: \"Advinhe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InformationCircleIcon, {\n        className: \"h-6 w-6 cursor-pointer\",\n        onClick: () => setIsInfoModalOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/flowr\",\n      alt: \"Cobra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      guesses: guesses,\n      currentGuess: currentGuess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      onChar: onChar,\n      onDelete: onDelete,\n      onEnter: onEnter,\n      guesses: guesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WinModal, {\n      isOpen: isWinModalOpen,\n      handleClose: () => setIsWinModalOpen(false),\n      guesses: guesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoModal, {\n      isOpen: isInfoModalOpen,\n      handleClose: () => setIsInfoModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RmISl8ZVEzQv4SVXpRv5KLgRhi4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/rwcos/wordle/src/App.tsx"],"names":["InformationCircleIcon","useState","useEffect","Alert","Grid","Keyboard","InfoModal","WinModal","isWordInWordList","isWinningWord","solution","App","guesses","setGuesses","currentGuess","setCurrentGuess","isGameWon","setIsGameWon","isWinModalOpen","setIsWinModalOpen","isInfoModalOpen","setIsInfoModalOpen","isWordNotFoundAlertOpen","setIsWordNotFoundAlertOpen","isGameLost","setIsGameLost","onChar","value","length","onDelete","slice","onEnter","setTimeout","winningWord"],"mappings":"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","sourcesContent":["import { InformationCircleIcon } from \"@heroicons/react/outline\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Alert } from \"./components/alerts/Alert\";\r\nimport { Grid } from \"./components/grid/Grid\";\r\nimport { Keyboard } from \"./components/keyboard/Keyboard\";\r\nimport { InfoModal } from \"./components/modals/InfoModal\";\r\nimport { WinModal } from \"./components/modals/WinModal\";\r\nimport { isWordInWordList, isWinningWord, solution } from \"./lib/words\";\r\n\r\nfunction App() {\r\n  const [guesses, setGuesses] = useState<string[]>([]);\r\n  const [currentGuess, setCurrentGuess] = useState(\"\");\r\n  const [isGameWon, setIsGameWon] = useState(false);\r\n  const [isWinModalOpen, setIsWinModalOpen] = useState(false);\r\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false);\r\n  const [isWordNotFoundAlertOpen, setIsWordNotFoundAlertOpen] = useState(false);\r\n  const [isGameLost, setIsGameLost] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isGameWon) {\r\n      setIsWinModalOpen(true);\r\n    }\r\n  }, [isGameWon]);\r\n\r\n  const onChar = (value: string) => {\r\n    if (currentGuess.length < 5 && guesses.length < 6) {\r\n      setCurrentGuess(`${currentGuess}${value}`);\r\n    }\r\n  };\r\n\r\n  const onDelete = () => {\r\n    setCurrentGuess(currentGuess.slice(0, -1));\r\n  };\r\n\r\n  const onEnter = () => {\r\n    if (!isWordInWordList(currentGuess)) {\r\n      setIsWordNotFoundAlertOpen(true);\r\n      return setTimeout(() => {\r\n        setIsWordNotFoundAlertOpen(false);\r\n      }, 2000);\r\n    }\r\n\r\n    const winningWord = isWinningWord(currentGuess);\r\n\r\n    if (currentGuess.length === 5 && guesses.length < 6 && !isGameWon) {\r\n      setGuesses([...guesses, currentGuess]);\r\n      setCurrentGuess(\"\");\r\n\r\n      if (winningWord) {\r\n        return setIsGameWon(true);\r\n      }\r\n\r\n      if (guesses.length === 5) {\r\n        setIsGameLost(true);\r\n        return setTimeout(() => {\r\n          setIsGameLost(false);\r\n        }, 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\">\r\n      <Alert message=\"Word not found\" isOpen={isWordNotFoundAlertOpen} />\r\n      <Alert\r\n        message={`You lost, the word was ${solution}`}\r\n        isOpen={isGameLost}\r\n      />\r\n      <div className=\"flex w-80 mx-auto items-center mb-8\">\r\n        <h1 className=\"text-xl grow font-bold\">Advinhe</h1>\r\n        <InformationCircleIcon\r\n          className=\"h-6 w-6 cursor-pointer\"\r\n          onClick={() => setIsInfoModalOpen(true)}\r\n        />\r\n      </div>\r\n      <img src=\"/images/flowr\" alt=\"Cobra\"></img>\r\n      <Grid guesses={guesses} currentGuess={currentGuess} />\r\n      <Keyboard\r\n        onChar={onChar}\r\n        onDelete={onDelete}\r\n        onEnter={onEnter}\r\n        guesses={guesses}\r\n      />\r\n      <WinModal\r\n        isOpen={isWinModalOpen}\r\n        handleClose={() => setIsWinModalOpen(false)}\r\n        guesses={guesses}\r\n      />\r\n      <InfoModal\r\n        isOpen={isInfoModalOpen}\r\n        handleClose={() => setIsInfoModalOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}