{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rwcos\\\\Advinhe\\\\Advinhe\\\\src\\\\components\\\\grid\\\\CurrentRow.tsx\";\nimport { Cell } from \"./Cell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentRow = _ref => {\n  let {\n    guess\n  } = _ref;\n  const splitGuess = guess.split(\"\");\n  const emptyCells = Array.from(Array(5 - splitGuess.length));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center mb-1\",\n    children: [splitGuess.map((letter, i) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: letter\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)), emptyCells.map((_, i) => /*#__PURE__*/_jsxDEV(Cell, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = CurrentRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentRow\");","map":{"version":3,"sources":["C:/Users/rwcos/Advinhe/Advinhe/src/components/grid/CurrentRow.tsx"],"names":["Cell","CurrentRow","guess","splitGuess","split","emptyCells","Array","from","length","map","letter","i","_"],"mappings":";AAAA,SAASA,IAAT,QAAqB,QAArB;;AAMA,OAAO,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAC9C,QAAMC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAY,EAAZ,CAAnB;AACA,QAAMC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,IAAIH,UAAU,CAACK,MAAhB,CAAhB,CAAnB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,eACGL,UAAU,CAACM,GAAX,CAAe,CAACC,MAAD,EAASC,CAAT,kBACd,QAAC,IAAD;AAAc,MAAA,KAAK,EAAED;AAArB,OAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAIGN,UAAU,CAACI,GAAX,CAAe,CAACG,CAAD,EAAID,CAAJ,kBACd,QAAC,IAAD,MAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdM;KAAMV,U","sourcesContent":["import { Cell } from \"./Cell\";\r\n\r\ntype Props = {\r\n  guess: string;\r\n};\r\n\r\nexport const CurrentRow = ({ guess }: Props) => {\r\n  const splitGuess = guess.split(\"\");\r\n  const emptyCells = Array.from(Array(5 - splitGuess.length));\r\n\r\n  return (\r\n    <div className=\"flex justify-center mb-1\">\r\n      {splitGuess.map((letter, i) => (\r\n        <Cell key={i} value={letter} />\r\n      ))}\r\n      {emptyCells.map((_, i) => (\r\n        <Cell key={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}